local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\124\72","\97\82\102\90\222"),function(v42) if (v9(v42,2)==81) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";end end else local v103=0;local v104;while true do if (v103==0) then v104=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==1) then return v123;end if (0==v122) then v123=v13(v104,v30);v30=nil;v122=1;end end else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v105=0;local v106;while true do if (v105==0) then v106=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v106-(v106%(2 -1)) ;end end else local v107=0;local v108;while true do if (v107==0) then v108=2^(v44-1) ;return (((v43%(v108 + v108))>=v108) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + (5 -3) ;v48=1;end if (1==v48) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * (126505 -60969)) + (v52 * 256) + v51 ;end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==(2 -1)) and  -1) or 1 ;v55=3;end end end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=620 -(555 + 64) , #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=v32();local v82;if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v70[v80]=v82;end v68[3]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,932 -(857 + 74) ,569 -(367 + 201) )==0) then local v111=0;local v112;local v113;local v114;while true do if (2==v111) then if (v31(v113,1,1)==1) then v114[2]=v70[v114[1 + 1 ]];end if (v31(v113,1 + 1 ,2)==1) then v114[3]=v70[v114[3]];end v111=3;end if (0==v111) then v112=v31(v85,2,3);v113=v31(v85,4,6);v111=1;end if (v111==1) then v114={v33(),v33(),nil,nil};if (v112==0) then v114[3]=v33();v114[4]=v33();elseif (v112==(928 -(214 + 713))) then v114[3]=v34();elseif (v112==2) then v114[3]=v34() -(2^16) ;elseif (v112==3) then v114[3]=v34() -(2^16) ;v114[4]=v33();end v111=2;end if (v111==3) then if (v31(v113,3,3)==(878 -(282 + 595))) then v114[4]=v70[v114[4]];end v65[v84]=v114;break;end end end end for v86=1,v34() do v66[v86-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v88=v75;local v89=v76;local v90=v77;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v109=0,v96 do if (v109>=v90) then v94[v109-v90 ]=v95[v109 + 1 ];else v98[v109]=v95[v109 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v110=0;while true do if (0==v110) then v100=v88[v92];v101=v100[1];v110=1;end if (1==v110) then if (v101<=40) then if (v101<=19) then if (v101<=9) then if (v101<=4) then if (v101<=(1638 -(1523 + 114))) then if (v101>0) then v98[v100[2]]=v100[3] + v98[v100[4]] ;else local v137=0;local v138;local v139;local v140;local v141;while true do if (v137==0) then v138=v100[2];v139,v140=v91(v98[v138](v21(v98,v138 + 1 ,v93)));v137=1;end if (v137==2) then for v342=v138,v93 do v141=v141 + 1 ;v98[v342]=v139[v141];end break;end if (v137==1) then v93=(v140 + v138) -1 ;v141=0 + 0 ;v137=2;end end end elseif (v101<=2) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;elseif (v101>3) then local v230=v100[2];local v231=v98[v230];for v311=v230 + 1 ,v93 do v15(v231,v98[v311]);end else v92=v100[3];end elseif (v101<=6) then if (v101==5) then local v143=0;local v144;local v145;local v146;local v147;while true do if (v143==2) then for v345=v144,v93 do v147=v147 + 1 ;v98[v345]=v145[v147];end break;end if (v143==1) then v93=(v146 + v144) -(1 -0) ;v147=0;v143=2;end if (0==v143) then v144=v100[2];v145,v146=v91(v98[v144](v21(v98,v144 + 1 ,v100[3])));v143=1;end end else local v148=0;local v149;while true do if (0==v148) then v149=v100[2];v98[v149](v21(v98,v149 + 1 ,v93));break;end end end elseif (v101<=7) then v98[v100[1067 -(68 + 997) ]]=v98[v100[3]][v100[4]];elseif (v101>8) then local v233=v100[2];local v234,v235=v91(v98[v233](v21(v98,v233 + 1 ,v100[3])));v93=(v235 + v233) -1 ;local v236=0;for v314=v233,v93 do local v315=0;while true do if (v315==0) then v236=v236 + 1 ;v98[v314]=v234[v236];break;end end end else v98[v100[2]]=v98[v100[3]] * v100[4] ;end elseif (v101<=14) then if (v101<=11) then if (v101==10) then if  not v98[v100[1272 -(226 + 1044) ]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]][v100[3]]=v98[v100[4]];end elseif (v101<=12) then local v154=0;local v155;local v156;local v157;while true do if (v154==0) then v155=v100[8 -6 ];v156=v98[v155];v154=1;end if (v154==1) then v157=v100[3];for v348=1,v157 do v156[v348]=v98[v155 + v348 ];end break;end end elseif (v101==13) then v98[v100[2]]= #v98[v100[3]];else local v240=v100[119 -(32 + 85) ];local v241=v98[v240];local v242=v98[v240 + 2 ];if (v242>0) then if (v241>v98[v240 + 1 + 0 ]) then v92=v100[3];else v98[v240 + 3 ]=v241;end elseif (v241<v98[v240 + 1 ]) then v92=v100[3];else v98[v240 + 3 ]=v241;end end elseif (v101<=16) then if (v101>15) then v98[v100[2]]=v73[v100[3]];else local v160=0;local v161;while true do if (v160==0) then v161=v100[2];v98[v161]=v98[v161](v21(v98,v161 + 1 ,v100[3]));break;end end end elseif (v101<=(4 + 13)) then local v162=v100[2];v98[v162]=v98[v162](v21(v98,v162 + 1 ,v93));elseif (v101>18) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else v98[v100[2]][v100[3]]=v100[961 -(892 + 65) ];end elseif (v101<=29) then if (v101<=24) then if (v101<=(49 -28)) then if (v101>20) then local v164=0;local v165;local v166;local v167;while true do if (v164==0) then v165=v100[2];v166=v98[v165 + 2 ];v164=1;end if (v164==2) then if (v166>0) then if (v167<=v98[v165 + 1 ]) then v92=v100[3];v98[v165 + 3 ]=v167;end elseif (v167>=v98[v165 + 1 ]) then local v432=0;while true do if (0==v432) then v92=v100[3];v98[v165 + 3 ]=v167;break;end end end break;end if (v164==1) then v167=v98[v165] + v166 ;v98[v165]=v167;v164=2;end end elseif  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=22) then local v168=0;local v169;while true do if (v168==0) then v169=v100[2];v98[v169](v21(v98,v169 + 1 ,v93));break;end end elseif (v101>23) then v98[v100[3 -1 ]]=v98[v100[3]]%v100[4] ;elseif (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=26) then if (v101>(45 -20)) then v98[v100[2]]={};else v92=v100[3];end elseif (v101<=(377 -(87 + 263))) then local v172=0;local v173;local v174;while true do if (0==v172) then v173=v100[182 -(67 + 113) ];v174={};v172=1;end if (v172==1) then for v352=1, #v97 do local v353=0;local v354;while true do if (v353==0) then v354=v97[v352];for v439=0, #v354 do local v440=v354[v439];local v441=v440[1 + 0 ];local v442=v440[2];if ((v441==v98) and (v442>=v173)) then local v459=0;while true do if (v459==0) then v174[v442]=v441[v442];v440[1]=v174;break;end end end end break;end end end break;end end elseif (v101==(68 -40)) then v98[v100[2]]= not v98[v100[3]];else local v249=0;local v250;local v251;while true do if (v249==1) then v98[v250 + 1 ]=v251;v98[v250]=v251[v100[4]];break;end if (v249==0) then v250=v100[2 + 0 ];v251=v98[v100[3]];v249=1;end end end elseif (v101<=34) then if (v101<=31) then if (v101==(119 -89)) then do return v98[v100[2]]();end else v98[v100[2]]=v98[v100[3]];end elseif (v101<=32) then local v177=0;local v178;while true do if (v177==0) then v178=v100[2];do return v21(v98,v178,v93);end break;end end elseif (v101==33) then local v252=0;local v253;local v254;local v255;while true do if (v252==2) then for v396=1,v100[10 -6 ] do local v397=0;local v398;while true do if (v397==0) then v92=v92 + 1 ;v398=v88[v92];v397=1;end if (v397==1) then if (v398[1]==52) then v255[v396-1 ]={v98,v398[3]};else v255[v396-1 ]={v73,v398[3]};end v97[ #v97 + 1 ]=v255;break;end end end v98[v100[2]]=v40(v253,v254,v74);break;end if (v252==0) then v253=v89[v100[3]];v254=nil;v252=1;end if (v252==1) then v255={};v254=v18({},{[v7("\17\148\66\201\83\169\54","\204\78\203\43\167\55")]=function(v399,v400) local v401=0;local v402;while true do if (v401==0) then v402=v255[v400];return v402[1][v402[2]];end end end,[v7("\110\154\164\38\9\181\95\161\175\59","\220\49\197\202\67\126")]=function(v403,v404,v405) local v406=v255[v404];v406[1][v406[954 -(802 + 150) ]]=v405;end});v252=2;end end else local v256=v100[3 -1 ];local v257=v98[v256];local v258=v98[v256 + 2 ];if (v258>0) then if (v257>v98[v256 + 1 ]) then v92=v100[3];else v98[v256 + 3 ]=v257;end elseif (v257<v98[v256 + 1 ]) then v92=v100[3];else v98[v256 + 3 ]=v257;end end elseif (v101<=(27 + 10)) then if (v101<=(1032 -(915 + 82))) then v98[v100[5 -3 ]]={};elseif (v101>(21 + 15)) then local v259=0;local v260;local v261;local v262;while true do if (v259==0) then v260=v100[2];v261=v98[v260];v259=1;end if (v259==1) then v262=v100[3];for v412=1 -0 ,v262 do v261[v412]=v98[v260 + v412 ];end break;end end else local v263=v100[2];local v264=v100[4];local v265=v263 + 2 ;local v266={v98[v263](v98[v263 + 1 ],v98[v265])};for v327=1,v264 do v98[v265 + v327 ]=v266[v327];end local v267=v266[1];if v267 then local v355=0;while true do if (v355==0) then v98[v265]=v267;v92=v100[3];break;end end else v92=v92 + 1 ;end end elseif (v101<=(1225 -(1069 + 118))) then local v180=v100[2];local v181,v182=v91(v98[v180](v98[v180 + (2 -1) ]));v93=(v182 + v180) -1 ;local v183=0;for v225=v180,v93 do local v226=0;while true do if (v226==0) then v183=v183 + 1 ;v98[v225]=v181[v183];break;end end end elseif (v101>39) then v98[v100[2]][v100[3]]=v100[8 -4 ];else v98[v100[2]]=v98[v100[3]] + v100[1 + 3 ] ;end elseif (v101<=61) then if (v101<=50) then if (v101<=45) then if (v101<=42) then if (v101>41) then local v184=v100[2];v98[v184]=v98[v184](v21(v98,v184 + 1 ,v100[3]));else do return v98[v100[2]]();end end elseif (v101<=43) then local v186=0;local v187;local v188;while true do if (v186==1) then for v358=1, #v97 do local v359=0;local v360;while true do if (v359==0) then v360=v97[v358];for v443=0, #v360 do local v444=v360[v443];local v445=v444[1];local v446=v444[2];if ((v445==v98) and (v446>=v187)) then local v460=0;while true do if (v460==0) then v188[v446]=v445[v446];v444[1]=v188;break;end end end end break;end end end break;end if (v186==0) then v187=v100[2];v188={};v186=1;end end elseif (v101==(77 -33)) then local v271=v100[2];local v272=v100[4];local v273=v271 + 2 ;local v274={v98[v271](v98[v271 + 1 ],v98[v273])};for v331=1,v272 do v98[v273 + v331 ]=v274[v331];end local v275=v274[1];if v275 then v98[v273]=v275;v92=v100[3];else v92=v92 + 1 + 0 ;end else local v276=v100[2];do return v98[v276](v21(v98,v276 + 1 ,v100[3]));end end elseif (v101<=47) then if (v101==46) then local v189=v100[793 -(368 + 423) ];v98[v189](v21(v98,v189 + (3 -2) ,v100[3]));else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101<=48) then local v191=0;local v192;local v193;local v194;while true do if (v191==0) then v192=v100[2];v193={v98[v192](v98[v192 + 1 ])};v191=1;end if (v191==1) then v194=0 -0 ;for v363=v192,v100[4] do v194=v194 + 1 ;v98[v363]=v193[v194];end break;end end elseif (v101>49) then do return;end else for v335=v100[2],v100[3] do v98[v335]=nil;end end elseif (v101<=55) then if (v101<=(494 -(416 + 26))) then if (v101>51) then v98[v100[2]]=v98[v100[3]];else v98[v100[2]]=v98[v100[3]] -v100[4] ;end elseif (v101<=53) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==54) then v98[v100[2]]=v100[3];elseif (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=58) then if (v101<=56) then local v198=0;local v199;while true do if (v198==0) then v199=v100[2];v98[v199](v21(v98,v199 + 1 ,v100[3]));break;end end elseif (v101>57) then v98[v100[2]]= not v98[v100[3]];else local v281=0;local v282;local v283;local v284;while true do if (v281==1) then v284=v98[v282] + v283 ;v98[v282]=v284;v281=2;end if (v281==2) then if (v283>0) then if (v284<=v98[v282 + (3 -2) ]) then local v452=0;while true do if (v452==0) then v92=v100[3];v98[v282 + 3 ]=v284;break;end end end elseif (v284>=v98[v282 + 1 ]) then local v453=0;while true do if (v453==0) then v92=v100[3];v98[v282 + 2 + 1 ]=v284;break;end end end break;end if (v281==0) then v282=v100[2];v283=v98[v282 + 2 ];v281=1;end end end elseif (v101<=59) then v98[v100[3 -1 ]]=v74[v100[3]];elseif (v101>60) then local v285=v100[2];local v286=v98[v285];for v338=v285 + 1 ,v93 do v15(v286,v98[v338]);end else v98[v100[2]]=v98[v100[3]] -v100[4] ;end elseif (v101<=71) then if (v101<=66) then if (v101<=63) then if (v101==62) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=64) then v98[v100[2]]=v98[v100[3]] + v100[442 -(145 + 293) ] ;elseif (v101==65) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v288=0;local v289;local v290;while true do if (1==v288) then for v415=v289 + 1 ,v100[3] do v15(v290,v98[v415]);end break;end if (v288==0) then v289=v100[2];v290=v98[v289];v288=1;end end end elseif (v101<=68) then if (v101==67) then local v206=v100[2];v98[v206]=v98[v206](v21(v98,v206 + 1 ,v93));else v98[v100[2]]= #v98[v100[3]];end elseif (v101<=(499 -(44 + 386))) then local v209=v100[2];local v210=v98[v100[1489 -(998 + 488) ]];v98[v209 + 1 ]=v210;v98[v209]=v210[v100[4]];elseif (v101==70) then local v291=0;local v292;local v293;local v294;local v295;while true do if (v291==1) then v93=(v294 + v292) -(1 + 0) ;v295=0;v291=2;end if (v291==2) then for v416=v292,v93 do local v417=0;while true do if (0==v417) then v295=v295 + 1 ;v98[v416]=v293[v295];break;end end end break;end if (v291==0) then v292=v100[2];v293,v294=v91(v98[v292](v21(v98,v292 + 1 ,v93)));v291=1;end end else v98[v100[2]]=v74[v100[3]];end elseif (v101<=76) then if (v101<=73) then if (v101>72) then v98[v100[2]]=v98[v100[3]] * v100[4] ;else do return;end end elseif (v101<=74) then v98[v100[2]]=v73[v100[3]];elseif (v101>75) then local v298=0;local v299;local v300;local v301;while true do if (v298==1) then v301={};v300=v18({},{[v7("\248\251\87\57\95\1\223","\100\167\164\62\87\59")]=function(v418,v419) local v420=0;local v421;while true do if (0==v420) then v421=v301[v419];return v421[1][v421[2]];end end end,[v7("\191\105\78\204\240\11\39\132\83\88","\73\224\54\32\169\135\98")]=function(v422,v423,v424) local v425=v301[v423];v425[1][v425[2]]=v424;end});v298=2;end if (v298==0) then v299=v89[v100[3]];v300=nil;v298=1;end if (v298==2) then for v427=1 + 0 ,v100[4] do v92=v92 + 1 ;local v428=v88[v92];if (v428[1]==52) then v301[v427-1 ]={v98,v428[775 -(201 + 571) ]};else v301[v427-1 ]={v73,v428[3]};end v97[ #v97 + 1 ]=v301;end v98[v100[2]]=v40(v299,v300,v74);break;end end else for v339=v100[8 -6 ],v100[3] do v98[v339]=nil;end end elseif (v101<=79) then if (v101<=77) then local v217=0;local v218;local v219;local v220;local v221;while true do if (v217==2) then for v368=v218,v93 do local v369=0;while true do if (v369==0) then v221=v221 + 1 ;v98[v368]=v219[v221];break;end end end break;end if (v217==0) then v218=v100[2];v219,v220=v91(v98[v218](v98[v218 + 1 ]));v217=1;end if (1==v217) then v93=(v220 + v218) -1 ;v221=0;v217=2;end end elseif (v101>78) then local v302=0;local v303;while true do if (0==v302) then v303=v100[2];do return v98[v303](v21(v98,v303 + 1 ,v100[3]));end break;end end else v98[v100[2]][v100[2 + 1 ]]=v98[v100[14 -10 ]];end elseif (v101<=80) then local v222=v100[2];local v223={v98[v222](v98[v222 + 1 ])};local v224=0 -0 ;for v227=v222,v100[4] do v224=v224 + 1 ;v98[v227]=v223[v224];end elseif (v101==81) then local v306=0;local v307;while true do if (v306==0) then v307=v100[2];do return v21(v98,v307,v93);end break;end end else v98[v100[2]]=v100[3];end v92=v92 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
